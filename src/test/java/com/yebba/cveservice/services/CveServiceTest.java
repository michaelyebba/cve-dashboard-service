/**
 * 
 */
package com.yebba.cveservice.services;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;
import static org.mockito.Mockito.when;

import java.util.Date;
import java.util.List;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.MockitoJUnitRunner;

import com.yebba.cveservice.CveTestUtils;
import com.yebba.cveservice.dao.CveRepository;
import com.yebba.cveservice.model.Cve;
import com.yebba.cveservice.pojo.high.CveDef;

/**
 * Unit test for the CVE Service
 * 
 * @author myebba
 *
 */
@RunWith(MockitoJUnitRunner.class)
public class CveServiceTest {
	
	@Mock
	private CveRepository cveRepository;
	
	@InjectMocks
	private CveService cveService;
	
	private static CveDef TEST_DATA = CveTestUtils.getTestData();
	
	@Before
	public void setupDataSource() {
		try {
			when(cveRepository.findAll()).thenReturn(TEST_DATA);
		} catch (Exception e) {
			e.printStackTrace();
			fail(e.getMessage());
		}
	}
	
	@Test
	public void testGetFormattedDate_ValidDateTime() {
		Cve cve = new Cve();
		cve.setDateTime("2019-01-17T21:57:10.733-05:00");
		assertNotNull(cve.getFormattedDate());
	}
	
	@Test
	public void testGetFormattedDate_InvalidDateTime() {
		Cve cve = new Cve();
		cve.setDateTime("2019-01-17T21:57:10.733");
		assertNotNull(cve.getFormattedDate());		
		assertEquals(new Date(0), cve.getFormattedDate());
	}
	
	@Test
	public void testGetFormattedDate_NullDateTime() {
		Cve cve = new Cve();
		cve.setDateTime(null);
		assertNotNull(cve.getFormattedDate());		
		assertEquals(new Date(0), cve.getFormattedDate());		
	}
	
	@Test
	public void testGetAllCves() {
		List<Cve> cves = cveService.getAllCves();
		assertNotNull(cves);
		assertTrue(cves.size() > 0);
	}
}