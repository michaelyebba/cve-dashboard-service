
package com.yebba.cveservice.pojo.high;

import com.google.gson.annotations.Expose;
import com.google.gson.annotations.SerializedName;
import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

public class Shards {

    @SerializedName("total")
    @Expose
    private Integer total;
    @SerializedName("successful")
    @Expose
    private Integer successful;
    @SerializedName("skipped")
    @Expose
    private Integer skipped;
    @SerializedName("failed")
    @Expose
    private Integer failed;

    /**
     * No args constructor for use in serialization
     * 
     */
    public Shards() {
    }

    /**
     * 
     * @param total
     * @param skipped
     * @param failed
     * @param successful
     */
    public Shards(Integer total, Integer successful, Integer skipped, Integer failed) {
        super();
        this.total = total;
        this.successful = successful;
        this.skipped = skipped;
        this.failed = failed;
    }

    public Integer getTotal() {
        return total;
    }

    public void setTotal(Integer total) {
        this.total = total;
    }

    public Integer getSuccessful() {
        return successful;
    }

    public void setSuccessful(Integer successful) {
        this.successful = successful;
    }

    public Integer getSkipped() {
        return skipped;
    }

    public void setSkipped(Integer skipped) {
        this.skipped = skipped;
    }

    public Integer getFailed() {
        return failed;
    }

    public void setFailed(Integer failed) {
        this.failed = failed;
    }

    @Override
    public String toString() {
        return new ToStringBuilder(this).append("total", total).append("successful", successful).append("skipped", skipped).append("failed", failed).toString();
    }

    @Override
    public int hashCode() {
        return new HashCodeBuilder().append(total).append(skipped).append(failed).append(successful).toHashCode();
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) {
            return true;
        }
        if ((other instanceof Shards) == false) {
            return false;
        }
        Shards rhs = ((Shards) other);
        return new EqualsBuilder().append(total, rhs.total).append(skipped, rhs.skipped).append(failed, rhs.failed).append(successful, rhs.successful).isEquals();
    }

}
